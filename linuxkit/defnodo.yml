# DefNoDo linuxkit VM image definition
# Kernel image to launch
kernel:
  image: linuxkit/kernel:5.4.39
  cmdline: "console=ttyS0 page_poison=1"
# Files to copy into the image along with the init image for bootup
init:
  - linuxkit/vpnkit-expose-port:v0.8 # install vpnkit-expose-port and vpnkit-iptables-wrapper on host
  - linuxkit/init:v0.8
  - linuxkit/runc:v0.8
  - linuxkit/containerd:v0.8
  - linuxkit/ca-certificates:v0.8
  - defnodo/utils:latest # defnodo specific tools and utilities needed
# Run once at boot commands
onboot:
  # support metadata for optional config in /run/config
  - name: metadata
    image: linuxkit/metadata:v0.8
  - name: sysctl
    image: linuxkit/sysctl:v0.8
  - name: sysfs
    image: linuxkit/sysfs:v0.8
  - name: binfmt
    image: linuxkit/binfmt:v0.8
  # Format and mount the disk image in /var/lib/docker
  - name: format
    image: linuxkit/format:v0.8
  - name: mount
    image: linuxkit/mount:v0.8
    command: ["/usr/bin/mountie", "/var/lib"]
  # # make a swap file on the mounted disk
  - name: swap
    image: linuxkit/swap:v0.8
    command: ["/swap.sh", "--path", "/var/lib/swap", "--size", "2048M"]
  # mount-vpnkit mounts the 9p share used by vpnkit to coordinate port forwarding
  - name: mount-vpnkit
    image: alpine:3.11
    binds:
      - /var:/host_var:rbind,rshared
    capabilities:
      - CAP_SYS_ADMIN
    rootfsPropagation: shared
    command: ["sh", "-c", "mkdir -p /host_var/vpnkit && mount -v -t 9p -o trans=virtio,dfltuid=1001,dfltgid=50,version=9p2000 port /host_var/vpnkit"]
  # move logs to the mounted disk (this is a temporary fix until we can limit the log sizes)
  # FIXME: This currently fails because of it being existing directories being moved.  Clean up later
  # - name: move-logs
  #   image: alpine:3.11
  #   binds:
  #     - /var:/host_var
  #   command: ["sh", "-c", "mv -v /host_var/log /host_var/lib && ln -vs /var/lib/log /host_var/log"]
  - name: dhcpcd
    image: linuxkit/dhcpcd:v0.8
    command: ["/sbin/dhcpcd", "--nobackground", "-f", "/dhcpcd.conf", "-1"]
services:
  # Enable acpi to shutdown on power events
  - name: acpid
    image: linuxkit/acpid:v0.8
  # Enable getty for easier debugging
  - name: getty
    image: linuxkit/getty:v0.8
    net: host
    env:
      - INSECURE=true
  # Run ntpd to keep time synchronised in the VM
  - name: ntpd
    image: linuxkit/openntpd:v0.8
  # VSOCK to unix domain socket forwarding. Forwards guest /var/run/docker.sock
  # to a socket on the host.
  - name: vsudd
    image: linuxkit/vsudd:v0.8
    binds:
      - /var/run:/var/run
    command: ["/vsudd", "-inport", "2376:unix:/var/run/docker.sock"]
  # vpnkit-forwarder forwards network traffic to/from the host via VSOCK port 62373. 
  # It needs access to the vpnkit 9P coordination share 
  - name: vpnkit-forwarder
    # image: linuxkit/vpnkit-forwarder:v0.8
    image: defnodo/vpnkit-forwarder:v0.5.0-custom
    # image: defnodo/vpnkit-forwarder:master
    binds:
      - /var/vpnkit:/port
      - /var/run:/host_var/run
      - /tmp:/tmp
    net: host
    command: ["/vpnkit-forwarder", "-debug", "-data-listen", "62373"]
  # Monitor for image deletes and invoke a TRIM on the container filesystem
  - name: trim-after-delete
    image: linuxkit/trim-after-delete:v0.8
  # When the host resumes from sleep, force a clock resync
  - name: host-timesync-daemon
    image: linuxkit/host-timesync-daemon:v0.8
  # Run dockerd with the vpnkit userland proxy from the vpnkit-forwarder container.
  # Bind mounts /var/run to allow vsudd to connect to docker.sock, /var/vpnkit
  # for vpnkit coordination and /run/config/docker for the configuration file.
  # Include 9p FS mount tools to allow directory and volume mounting from the host
  - name: docker-dfm
    # image: docker:dind
    # image: docker:20.10.10-dind
    # image: docker:18.06.0-ce-dind
    image: defnodo/nix-docker:latest
    capabilities:
      - all
    net: host
    mounts:
      - type: cgroup
        options: ["rw","nosuid","noexec","nodev","relatime"]
    binds:
      - /etc/resolv.conf:/etc/resolv.conf
      - /var/lib/docker:/var/lib/docker
      - /lib/modules:/lib/modules
      - /var/vpnkit:/port # vpnkit control 9p mount
      - /var/run:/var/run
      - /tmp:/var/run/containerd
      - /run/config/docker:/var/config/docker
      - /usr/bin/vpnkit-expose-port:/usr/bin/vpnkit-expose-port # userland proxy
      - /usr/bin/vpnkit-iptables-wrapper:/usr/bin/iptables # iptables wrapper
      - /usr/local/bin/mount9p_fuse:/usr/local/bin/mount9p_fuse # FUSE 9p FS mount tool
      - /usr/local/bin/mount_home_dirs.sh:/usr/local/bin/mount_home_dirs.sh # Sets up the proper mount locations
      - /usr/local/bin/run_docker.sh:/usr/local/bin/run_docker.sh # Wraps mounts and starts docker
      - /dev/fuse:/dev/fuse
    # command: [ "/usr/local/bin/run_docker.sh" ]
    command: [ "/usr/local/bin/run_nix_docker.sh" ]
    runtime:
      mkdir: ["/var/lib/docker"]

# Generic vpnkit command to pair with a build image from this file
# vpnkit --ethernet docker-for-mac-state/vpnkit_eth.sock --vsock-path docker-for-mac-state/connect  --port docker-for-mac-state/vpnkit_port.sock --host-names host.docker.internal --debug
# /usr/local/bin/vpnkit --ethernet /Users/mbrace/temp/defnodo/defnodo-data/defnodo-state/vpnkit_eth.sock --vsock-path /Users/mbrace/temp/defnodo/defnodo-data/defnodo-state/connect --port /Users/mbrace/temp/defnodo/defnodo-data/defnodo-state/vpnkit_port.sock